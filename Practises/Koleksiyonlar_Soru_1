using System;
using System.Collections;

namespace Koleksiyonlar_Soru_1
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter 20 number");
            ArrayList prime = new ArrayList();
            ArrayList notPrime = new ArrayList();
            int number = 0;
            int totalPrimes = 0;
            int totalNotPrimes = 0;
            for (int i = 1; i < 20; i++)
            {
                try
                {
                    number = Convert.ToInt32(Console.ReadLine());
                    if (CheckPrimeNumber(number))
                    {
                        prime.Add(number);
                        totalPrimes += number;
                    }
                    else
                    {
                        notPrime.Add(number);
                        totalNotPrimes += number;
                    }
                }
                catch (FormatException )
                {

                    throw new Exception("Number is negative or not numeric") ;
                }
            }
            Console.WriteLine("Prime Numbers!!");
            prime.Sort();
            prime.Reverse();
            foreach (var item in prime)
            {
                Console.WriteLine(item);
            }
            Console.WriteLine("Count Of Prime Numbers = " + prime.Count + " Average for Prime numbers = " + (totalPrimes / prime.Count));

            Console.WriteLine("Not Prime Numbers!!");
            notPrime.Sort();
            notPrime.Reverse();
            foreach (var item in notPrime)
            {
                Console.WriteLine(item);
            }
            Console.WriteLine("Count Of Prime Numbers = " + notPrime.Count + " Average for Prime numbers = " + (totalNotPrimes / notPrime.Count));

        }
        public static bool CheckPrimeNumber(int num)
        {
            bool result = true;
            if (num < 0 || num == 1)
            {
                return false;
            }
            for (int i = 2; i < num; i++)
            {
                if (num % i == 0)
                {
                    return false;
                    break;
                }


            }
            return result;


        }
    }
}
